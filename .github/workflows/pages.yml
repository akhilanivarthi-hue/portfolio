name: Deploy React to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18   # 18 is the most compatible baseline

      - name: Detect package manager
        id: pm
        run: |
          if [ -f yarn.lock ]; then echo "mgr=yarn" >> $GITHUB_OUTPUT;
          elif [ -f pnpm-lock.yaml ]; then echo "mgr=pnpm" >> $GITHUB_OUTPUT;
          else echo "mgr=npm" >> $GITHUB_OUTPUT; fi

      - name: Install dependencies
        run: |
          if [ "${{ steps.pm.outputs.mgr }}" = "yarn" ]; then corepack enable && yarn install --frozen-lockfile;
          elif [ "${{ steps.pm.outputs.mgr }}" = "pnpm" ]; then corepack enable && pnpm i --frozen-lockfile;
          else npm ci || npm i; fi

      - name: Build (unset CI so CRA warnings don't fail)
        id: build
        run: |
          if [ "${{ steps.pm.outputs.mgr }}" = "yarn" ]; then CI='' yarn build;
          elif [ "${{ steps.pm.outputs.mgr }}" = "pnpm" ]; then CI='' pnpm build;
          else CI='' npm run build; fi

          # Auto-detect output folder
          if [ -d "build" ]; then echo "out=build" >> $GITHUB_OUTPUT;
          elif [ -d "dist" ]; then echo "out=dist" >> $GITHUB_OUTPUT;
          else echo "No build output dir found"; ls -la; exit 1; fi

      - name: Show output dir (debug)
        run: ls -la "${{ steps.build.outputs.out }}"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.build.outputs.out }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
